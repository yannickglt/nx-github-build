name: Nx Distributed Tasks

on:
  push:
    branches:
      - master
  pull_request:

env:
  BUILD_ARTIFACTS: dist-artifacts
  CYPRESS_CACHE: cache-cypress
  CYPRESS_CACHE_FOLDER: cache/Cypress
  DEPENDENCIES_CACHE: cache-node-modules
  NX_CACHE: cache-nx

jobs:

  vars:
    runs-on: ubuntu-latest
    outputs:
      GITHUB_HEAD_REF: ${{ steps.GITHUB_HEAD_REF.outputs.value }}
      GITHUB_BASE_REF: ${{ steps.GITHUB_BASE_REF.outputs.value }}
    steps:
      - id: GITHUB_HEAD_REF
        run: echo "::set-output name=value::$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}})"
      - id: GITHUB_BASE_REF
        run: echo "::set-output name=value::$(echo ${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}})"

  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}
      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --pure-lockfile

  format:
    runs-on: ubuntu-latest
    needs: [vars, install-deps]
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}
      - run: git fetch --no-tags --prune origin ${{ needs.vars.outputs.GITHUB_BASE_REF }} ${{ needs.vars.outputs.GITHUB_HEAD_REF }}
      - name: Compute Nx arguments
        run: echo "NX_ARGUMENTS=--base=origin/${{ needs.vars.outputs.GITHUB_BASE_REF }}" >> $GITHUB_ENV
        if: needs.vars.outputs.GITHUB_HEAD_REF != needs.vars.outputs.GITHUB_BASE_REF
      - run: node --max-old-space-size=8000 ./node_modules/@nrwl/cli/bin/nx.js format:check $NX_ARGUMENTS

  distributed-task:
    runs-on: ubuntu-latest
    needs: [vars, install-deps]
    strategy:
      fail-fast: false
      matrix:
        target: ['lint', 'test', 'build', 'e2e']
        index: [1, 2, 3, 4]
    env:
      count: 4
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('yarn.lock') }}
      - name: Cache Nx
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/nx
          key: ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.index }}-${{ github.sha }}
          restore-keys: |
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-${{ matrix.target }}-${{ matrix.index }}-
            ${{ env.NX_CACHE }}-${{ hashFiles('yarn.lock') }}-
            ${{ env.NX_CACHE }}-
      - name: Cache Cypress
        uses: actions/cache@v2
        if: matrix.target == 'e2e'
        with:
          path: ${{ env.CYPRESS_CACHE_FOLDER }}
          key: ${{ env.CYPRESS_CACHE }}
      - run: git fetch --no-tags --prune origin ${{ needs.vars.outputs.GITHUB_BASE_REF }} ${{ needs.vars.outputs.GITHUB_HEAD_REF }}
      - name: Compute Nx arguments
        if: matrix.target == 'build' || matrix.target == 'e2e'
        run: echo "NX_ARGUMENTS=--prod" >> $GITHUB_ENV
      - name: nx run-many:${{ matrix.target }}
        if: matrix.target != 'e2e'
        run: node ./tools/scripts/run-many.js ${{ matrix.target }} ${{ matrix.index }} ${{ env.count }} ${{ needs.vars.outputs.GITHUB_HEAD_REF }} ${{ needs.vars.outputs.GITHUB_BASE_REF }} $NX_ARGUMENTS
      - name: nx run-many:e2e
        if: matrix.target == 'e2e'
        uses: cypress-io/github-action@v2
        with:
          command: node ./tools/scripts/run-many.js ${{ matrix.target }} ${{ matrix.index }} ${{ env.count }} ${{ needs.vars.outputs.GITHUB_HEAD_REF }} ${{ needs.vars.outputs.GITHUB_BASE_REF }} $NX_ARGUMENTS
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BUILD_ARTIFACTS }}
          path: dist
